name: Build & publish CI images

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      bake_group:
        description: "Bake group to build (default = all)"
        default: all
        required: false
  # schedule:
  # - cron: '0 3 * * 1'      # Monday 03:00 Berlin

env:
  REGISTRY_HOST: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository_owner }}

jobs:
  bake:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: QEMU for multi-arch
        uses: docker/setup-qemu-action@v3

      - name: Buildx builder
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore BuildKit cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Bake amd64
        uses: docker/bake-action@v6.8.0
        env:
          REGISTRY: ${{ env.REGISTRY_HOST }}/${{ env.IMAGE_NAMESPACE }}
        with:
          files: docker-bake.hcl
          targets: all
          push: true
          set: |
            *.platform=linux/amd64
            *.cache-from=type=gha,scope=${{ github.repository }}
            *.cache-to=type=gha,scope=${{ github.repository }},mode=max
            *.output=type=registry
            *.attest=type=sbom
          provenance: true

      - name: Bake arm64
        uses: docker/bake-action@v6.8.0
        env:
          REGISTRY: ${{ env.REGISTRY_HOST }}/${{ env.IMAGE_NAMESPACE }}
        with:
          files: docker-bake.hcl
          targets: all
          push: true
          set: |
            *.platform=linux/arm64
            *.cache-from=type=gha,scope=${{ github.repository }}
            *.cache-to=type=gha,scope=${{ github.repository }},mode=max
            *.output=type=registry
            *.attest=type=sbom
          provenance: true
